<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
				http://www.springframework.org/schema/beans/spring-beans.xsd
				http://www.springframework.org/schema/context
           		http://www.springframework.org/schema/context/spring-context.xsd
           		http://www.springframework.org/schema/tx
			     http://www.springframework.org/schema/tx/spring-tx.xsd
			     http://www.springframework.org/schema/aop 
			     http://www.springframework.org/schema/aop/spring-aop.xsd">

           		
    <!-- 配置DBCP数据源（连接池） -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/MyBlog" />
		<property name="username" value="root" />
		<property name="password" value="123456" />
	</bean>
	<!-- 配置MyBatis的SessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:mapper/*.xml" />
		<property name="typeAliasesPackage" value="myBlog.entity" />
	</bean>
	
	<!-- 扫描DAO接口所在包名，Spring会自动代理生成其下的接口实现类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="myBlog.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
 
	
	
	<bean id="transactionManager"
	class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="dataSource" />
	</bean>
	
	   <tx:advice id="txAdvice" transaction-manager="transactionManager">
         <tx:attributes>
             <tx:method name="find*" read-only="true" timeout="60"/>
             <tx:method name="fetch*" read-only="true" timeout="60"/>
             <tx:method name="add*" propagation="REQUIRED" timeout="60"/>
             <tx:method name="update*" propagation="REQUIRED" timeout="60"/>
             <tx:method name="delete*" propagation="REQUIRED" timeout="60"/>
             <tx:method name="register" propagation="REQUIRED" timeout="60"/>
         </tx:attributes>
    </tx:advice>
	
	<aop:config>
    	<aop:advisor advice-ref="txAdvice"
    		pointcut="execution(public * myBlog.biz..*.*(..))"/>
    </aop:config>
	

	
	<context:component-scan base-package="myBlog"/>
</beans>
